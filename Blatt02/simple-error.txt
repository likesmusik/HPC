Die Zeilennummer nehmen Referenz auf die Originaldatei.
Passende Kommentare sind auch in der neuen simple.c Datei zu finden.

12 (mistake1)
 Dort wird eine lokale Variable erzeugt und per return die Adresse des Arrays herauszugeben.
 Der Zugriff auf diese lokale Variable ist aber nicht möglich, da die Variable außerhalb der 
 Funktion nicht existiert.
 
19 (mistake2)
 Dort wird korrekt Speicher mit malloc() reserviert - jedoch nicht genug. Int Variablen brauchen
 mehr Platz/Speicher als nur char Variablen.
 
27 (mistake3)
 Ein Pointertrick funktioniert nicht. Der Pointer buf zeigt auf die lokale Variable mistake2_.
 Damit kann in der Funktion darauf zugegriffen werden, aber nicht von außen (siehe mistake1() ).
 
38 (mistake4)
 Hier wird der reservierte Speicher zu früh freigegen (free). Nach Freigabe des Speichers kann
 auch hier nicht mehr auf den Wert zugegriffen werden, wie es in 51 passiert.
 
55 (free)
 Dort wird der Speicher, auf welchen der Pointer zeigt, freigegen, jedoch nicht alles. Siehe 46.
 Dort wird der vordere Teil des Pointers 'abgeschnitten'.